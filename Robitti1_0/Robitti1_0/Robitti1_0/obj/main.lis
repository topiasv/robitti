 0000                   cpu LMM
                        .module main.c
                        .area text(rom, con, rel)
 0000                   .dbfile ./main.c
                        .area lit(rom, con, rel, lit)
 0000           L2:
 0000 524F424954544920312E3000  .byte 'R,'O,'B,'I,'T,'T,'I,32,49,46,48,0
 000C           L3:
 000C 457465656E21202020202000  .byte 'E,'t,'e,'e,'n,33,32,32,32,32,32,0
 0018           L4:
 0018 5461616B7365212020202000  .byte 'T,'a,'a,'k,'s,'e,33,32,32,32,32,0
 0024           L5:
 0024 534549532120202020202000  .byte 'S,'E,'I,'S,33,32,32,32,32,32,32,0
 0030           L6:
 0030 4F696B65616C6C6521202000  .byte 'O,'i,'k,'e,'a,'l,'l,'e,33,32,32,0
 003C           L7:
 003C 566173656D6D616C6C652100  .byte 'V,'a,'s,'e,'m,'m,'a,'l,'l,'e,33,0
                        .area text(rom, con, rel)
 0000                   .dbfile ./main.c
 0000                   .dbfile C:\Users\Markus\DOCUME~1\GitHub\robitti\ROBITT~1\ROBITT~1\ROBITT~1\main.c
 0000                   .dbfunc e main _main fV
 0000           ;         status -> X+74
 0000           ;        theStr6 -> X+62
 0000           ;        theStr5 -> X+50
 0000           ;        theStr3 -> X+38
 0000           ;        theStr2 -> X+26
 0000           ;        theStr1 -> X+14
 0000           ;        theStr4 -> X+2
 0000           ;              i -> X+0
 0000           _main::
 0000                   .dbline -1
 0000 10                push X
 0001 4F                mov X,SP
 0002 384B              add SP,75
 0004                   .dbline 8
 0004           ; #include <m8c.h>        // part specific constants and macros
 0004           ; #include "PSoCAPI.h"    // PSoC API definitions for all User Modules
 0004           ; #include <stdio.h>
 0004           ; 
 0004           ; BYTE rxBuf[16];
 0004           ; 
 0004           ; void main(void)
 0004           ; {
 0004                   .dbline 12
 0004           ;       int i;
 0004           ;       BYTE status;
 0004           ;       
 0004           ;       char theStr1[] = "ROBITTI 1.0";
 0004 62D000            mov REG[0xd0],>__r0
 0007 550000            mov [__r1],<L2
 000A 550000            mov [__r0],>L2
 000D 5A00              mov [__r3],X
 000F 06000E            add [__r3],14
 0012 62D507            mov REG[0xd5],7
 0015 10                push X
 0016 550000            mov [__rX],0
 0019 5100              mov A,[__r0]
 001B 5800              mov X,[__r1]
 001D           X1:
 001D 08                push A
 001E 28                romx
 001F 62D000            mov REG[0xd0],>__r0
 0022 3F00              mvi [__r3],A
 0024 18                pop A
 0025 75                inc X
 0026 0900              adc A,0
 0028 7600              inc [__rX]
 002A 3C000C            cmp [__rX],12
 002D BFEF              jnz X1
 002F 20                pop X
 0030                   .dbline 13
 0030           ;       char theStr2[] = "Eteen!     ";
 0030 55000C            mov [__r1],<L3
 0033 55000C            mov [__r0],>L3
 0036 5A00              mov [__r3],X
 0038 06001A            add [__r3],26
 003B 62D507            mov REG[0xd5],7
 003E 10                push X
 003F 550000            mov [__rX],0
 0042 5100              mov A,[__r0]
 0044 5800              mov X,[__r1]
 0046           X2:
 0046 08                push A
 0047 28                romx
 0048 62D000            mov REG[0xd0],>__r0
 004B 3F00              mvi [__r3],A
 004D 18                pop A
 004E 75                inc X
 004F 0900              adc A,0
 0051 7600              inc [__rX]
 0053 3C000C            cmp [__rX],12
 0056 BFEF              jnz X2
 0058 20                pop X
 0059                   .dbline 14
 0059           ;       char theStr3[] = "Taakse!    ";
 0059 550018            mov [__r1],<L4
 005C 550018            mov [__r0],>L4
 005F 5A00              mov [__r3],X
 0061 060026            add [__r3],38
 0064 62D507            mov REG[0xd5],7
 0067 10                push X
 0068 550000            mov [__rX],0
 006B 5100              mov A,[__r0]
 006D 5800              mov X,[__r1]
 006F           X3:
 006F 08                push A
 0070 28                romx
 0071 62D000            mov REG[0xd0],>__r0
 0074 3F00              mvi [__r3],A
 0076 18                pop A
 0077 75                inc X
 0078 0900              adc A,0
 007A 7600              inc [__rX]
 007C 3C000C            cmp [__rX],12
 007F BFEF              jnz X3
 0081 20                pop X
 0082                   .dbline 15
 0082           ;       char theStr4[] = "SEIS!      ";
 0082 550024            mov [__r1],<L5
 0085 550024            mov [__r0],>L5
 0088 5A00              mov [__r3],X
 008A 060002            add [__r3],2
 008D 62D507            mov REG[0xd5],7
 0090 10                push X
 0091 550000            mov [__rX],0
 0094 5100              mov A,[__r0]
 0096 5800              mov X,[__r1]
 0098           X4:
 0098 08                push A
 0099 28                romx
 009A 62D000            mov REG[0xd0],>__r0
 009D 3F00              mvi [__r3],A
 009F 18                pop A
 00A0 75                inc X
 00A1 0900              adc A,0
 00A3 7600              inc [__rX]
 00A5 3C000C            cmp [__rX],12
 00A8 BFEF              jnz X4
 00AA 20                pop X
 00AB                   .dbline 16
 00AB           ;       char theStr5[] = "Oikealle!  ";
 00AB 550030            mov [__r1],<L6
 00AE 550030            mov [__r0],>L6
 00B1 5A00              mov [__r3],X
 00B3 060032            add [__r3],50
 00B6 62D507            mov REG[0xd5],7
 00B9 10                push X
 00BA 550000            mov [__rX],0
 00BD 5100              mov A,[__r0]
 00BF 5800              mov X,[__r1]
 00C1           X5:
 00C1 08                push A
 00C2 28                romx
 00C3 62D000            mov REG[0xd0],>__r0
 00C6 3F00              mvi [__r3],A
 00C8 18                pop A
 00C9 75                inc X
 00CA 0900              adc A,0
 00CC 7600              inc [__rX]
 00CE 3C000C            cmp [__rX],12
 00D1 BFEF              jnz X5
 00D3 20                pop X
 00D4                   .dbline 17
 00D4           ;       char theStr6[] = "Vasemmalle!";
 00D4 55003C            mov [__r1],<L7
 00D7 55003C            mov [__r0],>L7
 00DA 5A00              mov [__r3],X
 00DC 06003E            add [__r3],62
 00DF 62D507            mov REG[0xd5],7
 00E2 10                push X
 00E3 550000            mov [__rX],0
 00E6 5100              mov A,[__r0]
 00E8 5800              mov X,[__r1]
 00EA           X6:
 00EA 08                push A
 00EB 28                romx
 00EC 62D000            mov REG[0xd0],>__r0
 00EF 3F00              mvi [__r3],A
 00F1 18                pop A
 00F2 75                inc X
 00F3 0900              adc A,0
 00F5 7600              inc [__rX]
 00F7 3C000C            cmp [__rX],12
 00FA BFEF              jnz X6
 00FC                   .dbline 18
 00FC           ;    LCD_Start();                  // LCD käynttöönotto
 00FC 7C0000            xcall _LCD_Start
 00FF                   .dbline 19
 00FF           ;    LCD_Position(0,3);            // Place LCD cursor at row 0, col 5.
 00FF 5703              mov X,3
 0101 5000              mov A,0
 0103 7C0000            xcall _LCD_Position
 0106 20                pop X
 0107                   .dbline 20
 0107           ;    LCD_PrString(theStr1);        //Tulosta teksti 1
 0107 62D000            mov REG[0xd0],>__r0
 010A 5A00              mov [__r1],X
 010C 06000E            add [__r1],14
 010F 10                push X
 0110 5007              mov A,7
 0112 08                push A
 0113 5100              mov A,[__r1]
 0115 5C                mov X,A
 0116 18                pop A
 0117 7C0000            xcall _LCD_PrString
 011A                   .dbline 22
 011A           ; 
 011A           ;       GYRO_Start();
 011A 7C0000            xcall _GYRO_Start
 011D                   .dbline 23
 011D           ;       status = GYRO_fReadBytes(0xD1,rxBuf,15,GYRO_CompleteXfer );
 011D 5000              mov A,0
 011F 08                push A
 0120 500F              mov A,15
 0122 08                push A
 0123 5000              mov A,>_rxBuf
 0125 08                push A
 0126 5000              mov A,<_rxBuf
 0128 08                push A
 0129 50D1              mov A,-47
 012B 08                push A
 012C 7C0000            xcall _GYRO_fReadBytes
 012F 38FB              add SP,-5
 0131 20                pop X
 0132 62D000            mov REG[0xd0],>__r0
 0135 544A              mov [X+74],A
 0137                   .dbline 24
 0137           ;       GYRO_SendStop();
 0137 10                push X
 0138 7C0000            xcall _GYRO_SendStop
 013B                   .dbline 27
 013B           ; 
 013B           ;       //Ohjaimien starttaukset..
 013B           ;       VME_Start();
 013B 7C0000            xcall _VME_Start
 013E                   .dbline 28
 013E           ;       OME_Start();
 013E 7C0000            xcall _OME_Start
 0141                   .dbline 29
 0141           ;       VMT_Start();
 0141 7C0000            xcall _VMT_Start
 0144                   .dbline 30
 0144           ;       OMT_Start();
 0144 7C0000            xcall _OMT_Start
 0147                   .dbline 33
 0147           ;       
 0147           ;       //Eteenpäin
 0147           ;       VME_Switch(1);         // Turn on VasenMoottoriEteen
 0147 5001              mov A,1
 0149 7C0000            xcall _VME_Switch
 014C                   .dbline 34
 014C           ;       OME_Switch(1);         // Turn on OikeaMoottoriEteen
 014C 5001              mov A,1
 014E 7C0000            xcall _OME_Switch
 0151                   .dbline 36
 0151           ;       
 0151           ;       LCD_Position(1,3);
 0151 5703              mov X,3
 0153 5001              mov A,1
 0155 7C0000            xcall _LCD_Position
 0158 20                pop X
 0159                   .dbline 37
 0159           ;       LCD_PrString(theStr2);         //Tulosta teksti 2
 0159 62D000            mov REG[0xd0],>__r0
 015C 5A00              mov [__r1],X
 015E 06001A            add [__r1],26
 0161 10                push X
 0162 5007              mov A,7
 0164 08                push A
 0165 5100              mov A,[__r1]
 0167 5C                mov X,A
 0168 18                pop A
 0169 7C0000            xcall _LCD_PrString
 016C 20                pop X
 016D                   .dbline 39
 016D           ;       
 016D           ;       for (i=0;i<30000;i++);
 016D 560100            mov [X+1],0
 0170 560000            mov [X+0],0
 0173           L8:
 0173                   .dbline 39
 0173           L9:
 0173                   .dbline 39
 0173 7701              inc [X+1]
 0175 0F0000            adc [X+0],0
 0178                   .dbline 39
 0178 5201              mov A,[X+1]
 017A 1130              sub A,48
 017C 5200              mov A,[X+0]
 017E 3180              xor A,-128
 0180 19F5              sbb A,(117 ^ 0x80)
 0182 CFF0              jc L8
 0184           X7:
 0184                   .dbline 40
 0184           ;       VME_Switch(0);            // Turn off VasenMoottoriEteen
 0184 10                push X
 0185 5000              mov A,0
 0187 7C0000            xcall _VME_Switch
 018A                   .dbline 41
 018A           ;       OME_Switch(0);            // Turn off OikeaMoottoriEteen
 018A 5000              mov A,0
 018C 7C0000            xcall _OME_Switch
 018F 20                pop X
 0190                   .dbline 43
 0190           ;       
 0190           ;       for (i=0;i<30000;i++); //Tauko välissä
 0190 560100            mov [X+1],0
 0193 560000            mov [X+0],0
 0196           L12:
 0196                   .dbline 43
 0196           L13:
 0196                   .dbline 43
 0196 7701              inc [X+1]
 0198 0F0000            adc [X+0],0
 019B                   .dbline 43
 019B 5201              mov A,[X+1]
 019D 1130              sub A,48
 019F 5200              mov A,[X+0]
 01A1 3180              xor A,-128
 01A3 19F5              sbb A,(117 ^ 0x80)
 01A5 CFF0              jc L12
 01A7           X8:
 01A7                   .dbline 44
 01A7           ;       LCD_Position(1,3);
 01A7 10                push X
 01A8 5703              mov X,3
 01AA 5001              mov A,1
 01AC 7C0000            xcall _LCD_Position
 01AF 20                pop X
 01B0                   .dbline 45
 01B0           ;       LCD_PrString(theStr4);         //Tulosta teksti 4
 01B0 62D000            mov REG[0xd0],>__r0
 01B3 5A00              mov [__r1],X
 01B5 060002            add [__r1],2
 01B8 10                push X
 01B9 5007              mov A,7
 01BB 08                push A
 01BC 5100              mov A,[__r1]
 01BE 5C                mov X,A
 01BF 18                pop A
 01C0 7C0000            xcall _LCD_PrString
 01C3                   .dbline 48
 01C3           ;       
 01C3           ;       //Taaksepäin
 01C3           ;       VMT_Switch(1);         // Turn on VasenMoottoriTaakse
 01C3 5001              mov A,1
 01C5 7C0000            xcall _VMT_Switch
 01C8                   .dbline 49
 01C8           ;       OMT_Switch(1);         // Turn on OikeaMoottoriTaakse
 01C8 5001              mov A,1
 01CA 7C0000            xcall _OMT_Switch
 01CD                   .dbline 51
 01CD           ;       
 01CD           ;       LCD_Position(1,3);
 01CD 5703              mov X,3
 01CF 5001              mov A,1
 01D1 7C0000            xcall _LCD_Position
 01D4 20                pop X
 01D5                   .dbline 52
 01D5           ;       LCD_PrString(theStr3);         //Tulosta teksti 3
 01D5 62D000            mov REG[0xd0],>__r0
 01D8 5A00              mov [__r1],X
 01DA 060026            add [__r1],38
 01DD 10                push X
 01DE 5007              mov A,7
 01E0 08                push A
 01E1 5100              mov A,[__r1]
 01E3 5C                mov X,A
 01E4 18                pop A
 01E5 7C0000            xcall _LCD_PrString
 01E8 20                pop X
 01E9                   .dbline 54
 01E9           ;       
 01E9           ;       for (i=0;i<30000;i++);
 01E9 560100            mov [X+1],0
 01EC 560000            mov [X+0],0
 01EF           L16:
 01EF                   .dbline 54
 01EF           L17:
 01EF                   .dbline 54
 01EF 7701              inc [X+1]
 01F1 0F0000            adc [X+0],0
 01F4                   .dbline 54
 01F4 5201              mov A,[X+1]
 01F6 1130              sub A,48
 01F8 5200              mov A,[X+0]
 01FA 3180              xor A,-128
 01FC 19F5              sbb A,(117 ^ 0x80)
 01FE CFF0              jc L16
 0200           X9:
 0200                   .dbline 55
 0200           ;       VMT_Switch(0);             // Turn off VasenMoottoriTaakse
 0200 10                push X
 0201 5000              mov A,0
 0203 7C0000            xcall _VMT_Switch
 0206                   .dbline 56
 0206           ;       OMT_Switch(0);             // Turn off OikeaMoottoriTaakse
 0206 5000              mov A,0
 0208 7C0000            xcall _OMT_Switch
 020B                   .dbline 58
 020B           ; 
 020B           ;       LCD_Position(1,3);
 020B 5703              mov X,3
 020D 5001              mov A,1
 020F 7C0000            xcall _LCD_Position
 0212 20                pop X
 0213                   .dbline 59
 0213           ;       LCD_PrString(theStr4);         //Tulosta teksti 4
 0213 62D000            mov REG[0xd0],>__r0
 0216 5A00              mov [__r1],X
 0218 060002            add [__r1],2
 021B 10                push X
 021C 5007              mov A,7
 021E 08                push A
 021F 5100              mov A,[__r1]
 0221 5C                mov X,A
 0222 18                pop A
 0223 7C0000            xcall _LCD_PrString
 0226 20                pop X
 0227                   .dbline 63
 0227           ;       
 0227           ;       //Käännökset
 0227           ;               
 0227           ;       for (i=0;i<30000;i++);
 0227 560100            mov [X+1],0
 022A 560000            mov [X+0],0
 022D           L20:
 022D                   .dbline 63
 022D           L21:
 022D                   .dbline 63
 022D 7701              inc [X+1]
 022F 0F0000            adc [X+0],0
 0232                   .dbline 63
 0232 5201              mov A,[X+1]
 0234 1130              sub A,48
 0236 5200              mov A,[X+0]
 0238 3180              xor A,-128
 023A 19F5              sbb A,(117 ^ 0x80)
 023C CFF0              jc L20
 023E           X10:
 023E                   .dbline 65
 023E           ;       //Oikealle              //Varmuudeksi turn off ei käytettäville suunnille
 023E           ;       OME_Switch(0);            // Turn off OikeaMoottoriEteen
 023E 10                push X
 023F 5000              mov A,0
 0241 7C0000            xcall _OME_Switch
 0244                   .dbline 66
 0244           ;       VMT_Switch(0);             // Turn off VasenMoottoriTaakse
 0244 5000              mov A,0
 0246 7C0000            xcall _VMT_Switch
 0249                   .dbline 67
 0249           ;       VME_Switch(1);            // Turn on VasenMoottoriEteen
 0249 5001              mov A,1
 024B 7C0000            xcall _VME_Switch
 024E                   .dbline 68
 024E           ;       OMT_Switch(1);             // Turn on OikeaMoottoriTaakse
 024E 5001              mov A,1
 0250 7C0000            xcall _OMT_Switch
 0253                   .dbline 70
 0253           ;       
 0253           ;       LCD_Position(1,3);
 0253 5703              mov X,3
 0255 5001              mov A,1
 0257 7C0000            xcall _LCD_Position
 025A 20                pop X
 025B                   .dbline 71
 025B           ;       LCD_PrString(theStr5);         //Tulosta teksti 5
 025B 62D000            mov REG[0xd0],>__r0
 025E 5A00              mov [__r1],X
 0260 060032            add [__r1],50
 0263 10                push X
 0264 5007              mov A,7
 0266 08                push A
 0267 5100              mov A,[__r1]
 0269 5C                mov X,A
 026A 18                pop A
 026B 7C0000            xcall _LCD_PrString
 026E 20                pop X
 026F                   .dbline 74
 026F           ;       
 026F           ;               //Ajastus 90° käännökseen, kokeilemalla...
 026F           ;       for (i=0;i<30000;i++);
 026F 560100            mov [X+1],0
 0272 560000            mov [X+0],0
 0275           L24:
 0275                   .dbline 74
 0275           L25:
 0275                   .dbline 74
 0275 7701              inc [X+1]
 0277 0F0000            adc [X+0],0
 027A                   .dbline 74
 027A 5201              mov A,[X+1]
 027C 1130              sub A,48
 027E 5200              mov A,[X+0]
 0280 3180              xor A,-128
 0282 19F5              sbb A,(117 ^ 0x80)
 0284 CFF0              jc L24
 0286           X11:
 0286                   .dbline 75
 0286           ;       VME_Switch(0);            // Turn off VasenMoottoriEteen
 0286 10                push X
 0287 5000              mov A,0
 0289 7C0000            xcall _VME_Switch
 028C                   .dbline 76
 028C           ;       OMT_Switch(0);             // Turn off OikeaMoottoriTaakse
 028C 5000              mov A,0
 028E 7C0000            xcall _OMT_Switch
 0291                   .dbline 78
 0291           ;       
 0291           ;       LCD_Position(1,3);
 0291 5703              mov X,3
 0293 5001              mov A,1
 0295 7C0000            xcall _LCD_Position
 0298 20                pop X
 0299                   .dbline 79
 0299           ;       LCD_PrString(theStr4);         //Tulosta teksti 4
 0299 62D000            mov REG[0xd0],>__r0
 029C 5A00              mov [__r1],X
 029E 060002            add [__r1],2
 02A1 10                push X
 02A2 5007              mov A,7
 02A4 08                push A
 02A5 5100              mov A,[__r1]
 02A7 5C                mov X,A
 02A8 18                pop A
 02A9 7C0000            xcall _LCD_PrString
 02AC 20                pop X
 02AD                   .dbline 81
 02AD           ;       
 02AD           ;       for (i=0;i<30000;i++);
 02AD 560100            mov [X+1],0
 02B0 560000            mov [X+0],0
 02B3           L28:
 02B3                   .dbline 81
 02B3           L29:
 02B3                   .dbline 81
 02B3 7701              inc [X+1]
 02B5 0F0000            adc [X+0],0
 02B8                   .dbline 81
 02B8 5201              mov A,[X+1]
 02BA 1130              sub A,48
 02BC 5200              mov A,[X+0]
 02BE 3180              xor A,-128
 02C0 19F5              sbb A,(117 ^ 0x80)
 02C2 CFF0              jc L28
 02C4           X12:
 02C4                   .dbline 83
 02C4           ;       //Vasemmalle    //Varmuudeksi turn off ei käytettäville suunnille
 02C4           ;       VME_Switch(0);            // Turn off VasenMoottoriEteen
 02C4 10                push X
 02C5 5000              mov A,0
 02C7 7C0000            xcall _VME_Switch
 02CA                   .dbline 84
 02CA           ;       OMT_Switch(0);             // Turn off OikeaMoottoriTaakse
 02CA 5000              mov A,0
 02CC 7C0000            xcall _OMT_Switch
 02CF                   .dbline 85
 02CF           ;       OME_Switch(1);            // Turn on OikeaMoottoriEteen
 02CF 5001              mov A,1
 02D1 7C0000            xcall _OME_Switch
 02D4                   .dbline 86
 02D4           ;       VMT_Switch(1);             // Turn on VasenMoottoriTaakse
 02D4 5001              mov A,1
 02D6 7C0000            xcall _VMT_Switch
 02D9                   .dbline 88
 02D9           ;       
 02D9           ;       LCD_Position(1,3);
 02D9 5703              mov X,3
 02DB 5001              mov A,1
 02DD 7C0000            xcall _LCD_Position
 02E0 20                pop X
 02E1                   .dbline 89
 02E1           ;       LCD_PrString(theStr6);         //Tulosta teksti 6
 02E1 62D000            mov REG[0xd0],>__r0
 02E4 5A00              mov [__r1],X
 02E6 06003E            add [__r1],62
 02E9 10                push X
 02EA 5007              mov A,7
 02EC 08                push A
 02ED 5100              mov A,[__r1]
 02EF 5C                mov X,A
 02F0 18                pop A
 02F1 7C0000            xcall _LCD_PrString
 02F4 20                pop X
 02F5                   .dbline 92
 02F5           ;       
 02F5           ;               //Ajastus 90° käännökseen, kokeilemalla...
 02F5           ;       for (i=0;i<30000;i++);
 02F5 560100            mov [X+1],0
 02F8 560000            mov [X+0],0
 02FB           L32:
 02FB                   .dbline 92
 02FB           L33:
 02FB                   .dbline 92
 02FB 7701              inc [X+1]
 02FD 0F0000            adc [X+0],0
 0300                   .dbline 92
 0300 5201              mov A,[X+1]
 0302 1130              sub A,48
 0304 5200              mov A,[X+0]
 0306 3180              xor A,-128
 0308 19F5              sbb A,(117 ^ 0x80)
 030A CFF0              jc L32
 030C           X13:
 030C                   .dbline 93
 030C           ;       OME_Switch(0);            // Turn off OikeaMoottoriEteen
 030C 10                push X
 030D 5000              mov A,0
 030F 7C0000            xcall _OME_Switch
 0312                   .dbline 94
 0312           ;       VMT_Switch(0);             // Turn off VasenMoottoriTaakse
 0312 5000              mov A,0
 0314 7C0000            xcall _VMT_Switch
 0317                   .dbline 96
 0317           ;       
 0317           ;       LCD_Position(1,3);
 0317 5703              mov X,3
 0319 5001              mov A,1
 031B 7C0000            xcall _LCD_Position
 031E 20                pop X
 031F                   .dbline 97
 031F           ;       LCD_PrString(theStr4);         //Tulosta teksti 4
 031F 62D000            mov REG[0xd0],>__r0
 0322 5A00              mov [__r1],X
 0324 060002            add [__r1],2
 0327 10                push X
 0328 5007              mov A,7
 032A 08                push A
 032B 5100              mov A,[__r1]
 032D 5C                mov X,A
 032E 18                pop A
 032F 7C0000            xcall _LCD_PrString
 0332 20                pop X
 0333           L36:
 0333                   .dbline 103
 0333           ;       
 0333           ; 
 0333           ;       
 0333           ; 
 0333           ;       //ÄLÄ POISTA!!!
 0333           ;       while (1);              //ESTÄÄ MAIN:ISTA POISTUMISEN TÄRKEÄ!!! ÄLÄ POISTA!!!
 0333           L37:
 0333                   .dbline 103
 0333 8FFF              xjmp L36
 0335           X0:
 0335                   .dbline -2
 0335           L1:
 0335 38B5              add SP,-75
 0337 20                pop X
 0338                   .dbline 0 ; func end
 0338 8FFF              jmp .
 033A                   .dbsym l status 74 c
 033A                   .dbsym l theStr6 62 A[12:12]c
 033A                   .dbsym l theStr5 50 A[12:12]c
 033A                   .dbsym l theStr3 38 A[12:12]c
 033A                   .dbsym l theStr2 26 A[12:12]c
 033A                   .dbsym l theStr1 14 A[12:12]c
 033A                   .dbsym l theStr4 2 A[12:12]c
 033A                   .dbsym l i 0 I
 033A                   .dbend
                        .area data(ram, con, rel)
 0000                   .dbfile C:\Users\Markus\DOCUME~1\GitHub\robitti\ROBITT~1\ROBITT~1\ROBITT~1\main.c
 0000           _rxBuf::
 0000 00000000000000000000      .word 0,0,0,0,0
 000A 000000000000      .byte 0,0,0,0,0,0
 0010                   .dbsym e rxBuf _rxBuf A[16:16]c
